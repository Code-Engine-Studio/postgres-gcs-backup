apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "postgres-gcs-backup.fullname" . }}
  labels:
    app: {{ template "postgres-gcs-backup.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  schedule: {{ .Values.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: {{ template "postgres-gcs-backup.fullname" . }}
          labels:
            app: {{ .Release.Name }}
            cron: {{ template "postgres-gcs-backup.name" . }}
        spec:
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command:
              - /postgres-gcs-backup/backup.sh
{{- if .Values.env }}
            env:
              - name: JOB_NAME
                value: {{ .Values.env.POSTGRES_DB | quote }}
              - name: POSTGRES_HOST
                value: {{ .Values.env.POSTGRES_HOST | quote }}
              - name: POSTGRES_PORT
                value: {{ .Values.env.POSTGRES_PORT | quote }}
              - name: POSTGRES_USER
                value: {{ .Values.env.POSTGRES_USER | quote }}
              - name: POSTGRES_PASSWORD
                value: {{ .Values.env.POSTGRES_PASSWORD | quote }}
              - name: POSTGRES_DB
                value: {{ .Values.env.POSTGRES_DB | quote }}
              - name: GCS_BUCKET
                value: {{ .Values.env.GCS_BUCKET | quote }}
              - name: GCS_KEY_FILE_PATH
                value: {{ .Values.env.GCS_KEY_FILE_PATH | quote }}
              - name: MATTERMOST_ALERTS
                value: {{ .Values.env.MATTERMOST_ALERTS | quote }}
              - name: MATTERMOST_WEBHOOK_URL
                value: {{ .Values.env.MATTERMOST_WEBHOOK_URL | quote }}
{{- end }}
            volumeMounts:
              - name: gcp-credentials
                mountPath: /secrets/gcp
                readOnly: true
{{- if .Values.resources }}
            resources:
{{ toYaml .Values.resources | indent 14 }}
{{- end }}
          restartPolicy: {{ .Values.restartPolicy }}
          volumes:
            - name: gcp-credentials
              secret:
                secretName: {{ .Values.secretName }}
